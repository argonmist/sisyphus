#!/bin/bash

help()
{
   # Display Help
   echo "Usage: sisyphus [OPTIONS]"
   echo "For iOS: sisyphus [-t|d|v|a|x|u|s|r|c]"
   echo "For Android: sisyphus [-t|d|v|a|i|s|r|c]"
   echo
   echo "options:"
   echo "t     Connetion types: webc/android/ios."
   echo "h     Print this Help."
   echo "d     Device name, for android would be ip:port, for ios would be device name in iphone setting."
   echo "v     OS version of android/ios."
   echo "a     App package name in android, or app bundle id in ios."
   echo "x     For ios only, should be xcode organization identifier."
   echo "u     For ios only, udid of iphone"
   echo "i     For Android only, the app init activity"
   echo "s     Appium server ip"
   echo "r     Set -r Report_IP if you want to generate report, if not, just skip this argument"
   echo "      Report_IP: On windwos/macos, you should use docker inspect network sisyphus to find container ip first"
   echo "      On Ubuntu, report ip should be your host ip"
   echo "      Without g/e option, it would generate report and serve the report"
   echo "c     Tase case name"
   echo "g     Set yes to generate report only"
   echo "e     Set yes to serve report only"
}

if [[ $# -eq 0 ]] ; then
  help
  exit 0
fi

report_gen="no"
report_serve="no"
while getopts ":ht:d:v:a:x:u:s:c:i:r:g:e:" opt; do
  case $opt in
    t) type=("$OPTARG");;
    d) device=("$OPTARG");;
    v) version=("$OPTARG");;
    a) app=("$OPTARG");;
    x) xcode_org_id=("$OPTARG");;
    u) udid=("$OPTARG");;
    s) server_ip=("$OPTARG");;
    c) case=("$OPTARG");;
    i) init=("$OPTARG");;
    r) report_ip=("$OPTARG");;
    g) report_gen=("$OPTARG");;
    e) report_serve=("$OPTARG");;
    h) help
       exit;;
    *) echo 'invalid argumants' ;;
  esac
done
shift $((OPTIND -1))

if [ "$type" = "ios" ]
then
cat << EOF > ~/sisyphus/yamls/ios.yaml
appiumServer:
  'http://$server_ip:4723/wd/hub'
deviceName:
  '$device'
platformVersion:
  '$version'
platformName:
  'iOS'
bundleId:
  '$app'
automationName:
  'XCUITest'
xcodeOrgId:
  '$xcode_org_id'
xcodeSigningId:
  'iPhone Developer'
udid:
  '$udid'
webviewConnectTimeout:
  '90000'
pathFile:
  'ios_testcase/$case.yaml'
EOF
  if [ -z "$report_ip" ]
  then
    python3 ~/sisyphus/boulder/shove.py -t $type
  else
    python3 ~/sisyphus/boulder/report.py -t $type -r $report_ip -g $report_gen -e $report_serve
  fi
fi

if [ "$type" = "android" ]
then
cat << EOF > ~/sisyphus/yamls/android.yaml
appiumServer:
  'http://$server_ip:4723/wd/hub'
deviceName:
  '$device'
platformVersion:
  '$version'
platformName:
  'Android'
appPackage:
  '$app'
appActivity:
  '$init'
autoGrantPermissions: True
chromedriverExecutable:
  '/root/sisyphus/chromedriver'
pathFile:
  'android_testcase/$case.yaml'
EOF

  if [ -z "$report_ip" ]
  then
    python3 ~/sisyphus/boulder/shove.py -t $type
  else
    python3 ~/sisyphus/boulder/report.py -t $type -r $report_ip -g $report_gen -e $report_serve
  fi
fi
